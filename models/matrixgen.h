//HERE BE DRAGONS

#define matgen_master (R,P,A,X,Y,Z) (X*cos(radians(mod(A,360)))*cos(radians(mod(P,360))),Y*sin(radians(mod(A,360)))*cos(radians(mod(P,360))),Z*cos(radians(mod(A,360)))*-sin(radians(mod(A,360))),0, X*(-sin(radians(mod(A,360)))*cos(radians(mod(R,360)))+cos(radians(mod(A,360)))*sin(radians(mod(P,360)))*sin(radians(mod(R,360)))),Y*(cos(radians(mod(A,360)))*cos(radians(mod(R,360)))+sin(radians(mod(A,360)))*sin(radians(mod(P,360)))*sin(radians(mod(R,360)))),Z*(sin(radians(mod(A,360)))*sin(radians(mod(P,360)))*cos(radians(mod(R,360)))+cos(radians(mod(P,360)))*sin(radians(mod(R,360)))),0, X*(sin(radians(mod(A,360)))*sin(radians(mod(R,360)))+cos(radians(mod(A,360)))*sin(radians(mod(P,360)))*cos(radians(mod(R,360)))),Y*(cos(radians(mod(A,360)))*-sin(radians(mod(R,360)))+sin(radians(mod(A,360)))*sin(radians(mod(P,360)))*sin(radians(mod(R,360)))),Z*(sin(radians(mod(A,360)))*sin(radians(mod(P,360)))*-sin(radians(mod(R,360)))+cos(radians(mod(P,360)))*cos(radians(mod(R,360)))),0, 0,0,0,1)
#define matgen_scale (X,Y,Z) (X,0,0,0, 0,Y,0,0, 0,0,Z,0, 0,0,0,1)
#define matgen_translate (X,Y,Z) (1,0,0,0, 0,1,0,0, 0,0,1,0, X,Y,Z,1)
#define matgen_identity (1,0,0,0, 0,1,0,0, 0,0,1,0, 0,0,0,1)
