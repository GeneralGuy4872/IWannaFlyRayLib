//parent file is: ./main.cc

void * iwf$$threads$$curses$$function (void * input) {
	char *(*argv)[] = input;
	for (int fg = 0;fg < 8;fg++) {
		for (int bg = 0;bg < 8;bg++) {
			init_pair(fg | (bg << 3),fg,bg);
		}}
	FILE * devfile = fopen((*argv)[1],"r+");
	if (devfile == NULL) {
		fprintf(stderr,"%s\n(Not a typewriter?)\n",strerror(errno));
		printf("usage: %s <another tty> <$TERM of tty> ...\n",(*argv)[0]);
		SCRAM = true;
		return NULL;
		}

	CURSCREEN = newterm((*argv)[2],devfile,devfile);
	set_term(CURSCREEN);
	
	raw();
	noecho();
	keypad(NULL,1);

	mvprintw(2,3,"IWannaFly");
	mvprintw(3,4,"prealpha devtest");
	mvprintw(4,5,"revision snapshot:");
	mvprintw(4,5,SNAPSHOT);

	irr::core::vector3df placeholder;
	float placeholder2;
	char tmp;
	int tmp0;
	int tmp1;
	int tmp2;
	int tmp4;
	int tmp5;

	for (;;sleep(1)) {
		pthread_mutex_lock(&CAMLOCK);
		mvprintw(6,8,"camera azimuth   : % 15.10f°",CAMCOORD.az * (180 / M_PI));
		mvprintw(7,8,"camera elevation : % 15.10f°",CAMCOORD.el * (180 / M_PI));

		mvprintw(8,8,"camera basis vector:");
		placeholder = CAMCOORD.euclid();
		pthread_mutex_unlock(&CAMLOCK);
		mvprintw(9,10,"% 12.10fx",placeholder.X);
		mvprintw(9,35,"% 12.10fy",placeholder.Y);
		mvprintw(9,60,"% 12.10fz",placeholder.Z);

		mvprintw(11,8,"camera position:");
		pthread_mutex_lock(&CAMLOCK);
		placeholder = CAMERA_POS_BUFFER;
		pthread_mutex_unlock(&CAMLOCK);
		mvprintw(12,10,"% 15.10fx",placeholder.X);
		mvprintw(12,35,"% 15.10fy",placeholder.Y);
		mvprintw(12,60,"% 15.10fz",placeholder.Z);

		mvprintw(14,8,"player position:");
		pthread_mutex_lock(&CAMLOCK);
		placeholder = PLAYER_POS_BUFFER;
		pthread_mutex_unlock(&CAMLOCK);
		mvprintw(15,10,"% 15.10fx",placeholder.X);
		mvprintw(15,35,"% 15.10fy",placeholder.Y);
		mvprintw(15,60,"% 15.10fz",placeholder.Z);

		mvprintw(17,8,"player velocity:");
		pthread_mutex_lock(&CAMLOCK);
		mvprintw(18,10,"% 15.10fx",(*PLAYER_VELOCITY)[0]);
		mvprintw(18,35,"% 15.10fy",(*PLAYER_VELOCITY)[1]);
		mvprintw(18,60,"% 15.10fz",(*PLAYER_VELOCITY)[2]);
		pthread_mutex_unlock(&CAMLOCK);

		mvprintw(20,8,"cursor grabbed? >%s",STEALCURSOR ? "yes" : "no ");

		pthread_mutex_lock(&JITTER_ADV_LOCK);
		mvprintw(21,8,"adverage jitter : %4.4f",JITTER_ADVERAGE);
		pthread_mutex_unlock(&JITTER_ADV_LOCK);
		tmp = JITTERMAX;
		mvprintw(22,8,"(max jitter : %3i)",tmp);

		refresh();
	}};
