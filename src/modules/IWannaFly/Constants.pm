package IWannaFly::Constants;
require Exporter;
our @ISA = qw(Exporter);
our @EXPORT;
#AUTOGENERATED
use constant C__NIL => "";
push(@EXPORT,C__NIL);
use constant C__OK => 0;
push(@EXPORT,C__OK);
use constant C__ERR => -1;
push(@EXPORT,C__ERR);
use constant C__GRAV => 3.2174;
push(@EXPORT,C__GRAV);
use constant C__MAX_X => 64;
push(@EXPORT,C__MAX_X);
use constant C__MAX_Y => 24;
push(@EXPORT,C__MAX_Y);
use constant C__MAX_Z => 16;
push(@EXPORT,C__MAX_Z);
use constant C__ROOF => 201;
push(@EXPORT,C__ROOF);
use constant C__EQUATOR => 360;
push(@EXPORT,C__EQUATOR);
use constant C__GOOD_MASK => 0700;
push(@EXPORT,C__GOOD_MASK);
use constant C__LAWFUL_MASK => 0444;
push(@EXPORT,C__LAWFUL_MASK);
use constant C__EVIL_MASK => 0007;
push(@EXPORT,C__EVIL_MASK);
use constant C__CHAOTIC_MASK => 0111;
push(@EXPORT,C__CHAOTIC_MASK);
use constant C__NEUT_HORIZ_MASK => 0070;
push(@EXPORT,C__NEUT_HORIZ_MASK);
use constant C__NEUT_VERT_MASK => 0222;
push(@EXPORT,C__NEUT_VERT_MASK);
use constant C__LAW_GOOD_BIT => 0400;
push(@EXPORT,C__LAW_GOOD_BIT);
use constant C__NEUT_GOOD_BIT => 0200;
push(@EXPORT,C__NEUT_GOOD_BIT);
use constant C__CHAOS_GOOD_BIT => 0100;
push(@EXPORT,C__CHAOS_GOOD_BIT);
use constant C__LAW_NEUT_BIT => 0040;
push(@EXPORT,C__LAW_NEUT_BIT);
use constant C__TRUE_NEUT_BIT => 0020;
push(@EXPORT,C__TRUE_NEUT_BIT);
use constant C__CHAOS_NEUT_BIT => 0010;
push(@EXPORT,C__CHAOS_NEUT_BIT);
use constant C__LAW_EVIL_BIT => 0004;
push(@EXPORT,C__LAW_EVIL_BIT);
use constant C__NEUT_EVIL_BIT => 0002;
push(@EXPORT,C__NEUT_EVIL_BIT);
use constant C__CHAOS_EVIL_BIT => 0001;
push(@EXPORT,C__CHAOS_EVIL_BIT);
use constant C__LAW_GOOD_WIDEMSK => 0764;
push(@EXPORT,C__LAW_GOOD_WIDEMSK);
use constant C__CHAOS_GOOD_WIDEMSK => 0731;
push(@EXPORT,C__CHAOS_GOOD_WIDEMSK);
use constant C__LAW_EVIL_WIDEMSK => 0467;
push(@EXPORT,C__LAW_EVIL_WIDEMSK);
use constant C__CHAOS_EVIL_WIDEMSK => 0137;
push(@EXPORT,C__CHAOS_EVIL_WIDEMSK);
use constant C__NEUTRAL_WIDEMSK => 0272;
push(@EXPORT,C__NEUTRAL_WIDEMSK);
use constant C__ELE_WATER_BIT => 0x80;
push(@EXPORT,C__ELE_WATER_BIT);
use constant C__ELE_ICE_BIT => 0x40;
push(@EXPORT,C__ELE_ICE_BIT);
use constant C__ELE_AIR_BIT => 0x20;
push(@EXPORT,C__ELE_AIR_BIT);
use constant C__ELE_ELEC_BIT => 0x10;
push(@EXPORT,C__ELE_ELEC_BIT);
use constant C__ELE_FIRE_BIT => 0x08;
push(@EXPORT,C__ELE_FIRE_BIT);
use constant C__ELE_METAL_BIT => 0x04;
push(@EXPORT,C__ELE_METAL_BIT);
use constant C__ELE_EARTH_BIT => 0x02;
push(@EXPORT,C__ELE_EARTH_BIT);
use constant C__ELE_TREE_BIT => 0x01;
push(@EXPORT,C__ELE_TREE_BIT);
use constant C__ELE_WATER_WIDEMSK => 0xC1;
push(@EXPORT,C__ELE_WATER_WIDEMSK);
use constant C__ELE_ICE_WIDEMSK => 0xE0;
push(@EXPORT,C__ELE_ICE_WIDEMSK);
use constant C__ELE_AIR_WIDEMSK => 0x70;
push(@EXPORT,C__ELE_AIR_WIDEMSK);
use constant C__ELE_ELEC_WIDEMSK => 0x38;
push(@EXPORT,C__ELE_ELEC_WIDEMSK);
use constant C__ELE_FIRE_WIDEMSK => 0x1C;
push(@EXPORT,C__ELE_FIRE_WIDEMSK);
use constant C__ELE_METAL_WIDEMSK => 0x0C;
push(@EXPORT,C__ELE_METAL_WIDEMSK);
use constant C__ELE_EARTH_WIDEMSK => 0x07;
push(@EXPORT,C__ELE_EARTH_WIDEMSK);
use constant C__ELE_TREE_WIDEMSK => 0x83;
push(@EXPORT,C__ELE_TREE_WIDEMSK);
use constant C__LIGHT_BIT => 04;
push(@EXPORT,C__LIGHT_BIT);
use constant C__DARK_BIT => 02;
push(@EXPORT,C__DARK_BIT);
use constant C__ENTROPY_BIT => 01;
push(@EXPORT,C__ENTROPY_BIT);
